# Database location. Directory with files like providers data and mappings rules
# Example: data-base-location=/Users/{user}/repos/pdx/pdxfinder-data
data-dir=

providers_data_path=data/UPDOG
mapping_path=mapping

data_repo_gitlab_token=

# Branch to use for the pdxfinder-data repository
data_repo_gitlab_branch=dev

# Directory where the lucene index is stored. This is relative to the data
# directory
lucene_index_dir=${data-dir}/lucene-index
obo_file_path=${data-dir}/ontology/ncit.obo

#################### Default configuration for search (when not specified by the user)  ############

# Multiplier for all rules (make them more important than ontologies)
rule_multiplier=2

# Multiplier for a query term involving only a value from a field.
# Eg: (SampleDiagnosis: carcinoma)^0.2
term_multiplier=1

# Multiplier for a query term involving more than 1 value from a field.
# Eg: (SampleDiagnosis: lung carcinoma)^0.2
multi_term_multiplier=1

# Multiplier for a query term involving only a value from a field.
# Eg: (SampleDiagnosis: "carcinoma")^0.2
phrase_multiplier=2

# Multiplier for a query term involving only a value from a field.
# Eg: (SampleDiagnosis: "lung carcinoma")^0.2
multi_term_phrase_multiplier=1

ontology_label_weight=5.2
ontology_definition_weight=0.3
ontology_synonym_weight=3.0

#Value between 0 and 100 that represents a threshold for the calculation of similarities between
#entities. 2 entities with this similarity equal or greater are considered identical and the
# suggestions calculation process will be able to do an automatic mapping of the term.
similarity_perfect_match_score=100

#Value between 0 and 100 that represents a threshold for the calculation of similarities between
#entities. 2 entities with this similarity equal or greater are considered similar enough and the
## suggestions calculation process to take the entity as a valid suggested term.
similarity_acceptable_match_score=60

#Number of suggested mappings per entity
number_of_suggested_mappings=10

#Perfect matches needed to finish earlier the process of searching suggestions
perfect_matches_to_finish_earlier=3

spring.jpa.hibernate.ddl-auto=update
spring.sql.init.platform=postgresql
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Explicitly setting these 2 properties because automatic naming strategy doesn't seem to work
# when defining manually 2 data sources
spring.jpa.properties.hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
spring.jpa.properties.hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# To toggle for debug purposes
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=INFO
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.cancermodels=INFO

###################################################################################################
# Data sources configuration

db_host=localhost
db_port=5432
db_name=pdcm_db
db_user=pdcm_admin
db_password=pdcm_admin

# Schema names are fixed values. Shouldn't need to be injected
db_pdcm_api_schema=pdcm_api
db_admin_app_schema=admin_app

# Configuration to connect to the admin_app schema
spring.datasource.url=jdbc:postgresql://${db_host}:${db_port}/${db_name}?currentSchema=${db_admin_app_schema}
spring.datasource.username=${db_user}
spring.datasource.password=${db_password}

# Configuration to connect to the pdcm-api schema to read data
spring.pdcm-etl.url=jdbc:postgresql://${db_host}:${db_port}/${db_name}?currentSchema=${db_pdcm_api_schema}
spring.pdcm-etl.username=${db_user}
spring.pdcm-etl.password=${db_password}

